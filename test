local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/shlexware/Orion/main/source')))()

local Window = OrionLib:MakeWindow({Name = "Title of the library", HidePremium = false, SaveConfig = true, ConfigFolder = "OrionTest"})


local Tab = Window:MakeTab({
	Name = "Tab 1",
	Icon = "rbxassetid://4483345998",
	PremiumOnly = false
})

local Basket = game.Players.LocalPlayer
local fx = Basket.Character or Basket.CharacterAdded:Wait()
local fxHuman = fx:WaitForChild("Humanoid")
local fxRoot = fx:WaitForChild("HumanoidRootPart")
local BasketToolName = "Basketball"
local fxFollow = false
local gui

local function getBasketball()
    for _, tool in pairs(workspace:GetChildren()) do
        if tool:IsA("Tool") and tool.Name == BasketToolName then
            return tool
        end
    end
    return nil
end

local function fxPressF()
    game:GetService("VirtualInputManager"):SendKeyEvent(true, Enum.KeyCode.F, false, game)
end

local function fxReleaseF()
    game:GetService("VirtualInputManager"):SendKeyEvent(false, Enum.KeyCode.F, false, game)
end

local function fxHasTool(character)
    local fxTool = character:FindFirstChildOfClass("Tool")
    return fxTool and fxTool.Name == BasketToolName
end

local function fxFindNearestWithTool()
    local fxNearest, fxDist = nil, math.huge

    for _, fxPlayer in pairs(game.Players:GetPlayers()) do
        if fxPlayer ~= Basket and fxPlayer.Character and fxPlayer.Team ~= Basket.Team then
            local fxCh = fxPlayer.Character
            local fxHum = fxCh:FindFirstChild("Humanoid")
            local fxRootPart = fxCh:FindFirstChild("HumanoidRootPart")

            if fxHum and fxRootPart and fxHasTool(fxCh) then
                local fxDistance = (fxRoot.Position - fxRootPart.Position).Magnitude
                if fxDistance < fxDist then
                    fxNearest = fxPlayer
                    fxDist = fxDistance
                end
            end
        end
    end

    return fxNearest
end

local function fxMoveToBall(ball)
    if ball and ball:IsDescendantOf(workspace) then
        local ballVelocity = ball.AssemblyLinearVelocity
        local predictedPosition = ball.Position + ballVelocity * 0.2  -- Predicts for basketball 

        local fxDistance = (fxRoot.Position - predictedPosition).Magnitude
        if fxDistance > 15 then  --distance 
            fxHuman:MoveTo(predictedPosition)
        end
    end
end

local function fxNpcMove()
    while fxFollow do
        local ball = getBasketball()

        if ball and not ball.Parent:IsA("Player") then
            fxMoveToBall(ball)
        else
            local fxNearestPlayer = fxFindNearestWithTool()
            if fxNearestPlayer then
                fxPressF()
                fxHuman:MoveTo(fxNearestPlayer.Character.HumanoidRootPart.Position + Vector3.new(5, 0, 5))
            end
        end

        wait(0) --react time
    end
end

local function createGui()
    gui = Instance.new("ScreenGui", Basket:WaitForChild("PlayerGui"))
    local button = Instance.new("TextButton")
    button.Size = UDim2.new(0, 200, 0, 50)
    button.Position = UDim2.new(0.5, -100, 0.5, -25)
    button.Text = "Follow Off"
    button.Draggable = true
    button.BackgroundColor3 = Color3.fromRGB(255, 0, 0) 
    button.Parent = gui

    button.MouseButton1Click:Connect(function()
        fxFollow = not fxFollow
        if fxFollow then
            button.Text = "Auto Gurd ON"
            button.BackgroundColor3 = Color3.fromRGB(0, 255, 0) -- Green
            fxNpcMove()
        else
            button.Text = "Auto Gurd OF"
            button.BackgroundColor3 = Color3.fromRGB(255, 0, 0) -- Red
            fxReleaseF()
        end
    end)
end

local function destroyGui()
    if gui then
        gui:Destroy()
        gui = nil
    end
end

Tab:AddToggle({
    Name = "Auto Guard Mobile",
    Default = false,
    Callback = function(Value)
        fxFollow = Value
        if fxFollow then
            createGui()
        else
            destroyGui()
        end
    end
})
