local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/shlexware/Orion/main/source')))()
local Window = OrionLib:MakeWindow({Name = "Title of the library", HidePremium = false, SaveConfig = true, ConfigFolder = "OrionTest"})

--[[
Name = <string> - The name of the UI.
HidePremium = <bool> - Whether or not the user details shows Premium status or not.
SaveConfig = <bool> - Toggles the config saving in the UI.
ConfigFolder = <string> - The name of the folder where the configs are saved.
IntroEnabled = <bool> - Whether or not to show the intro animation.
IntroText = <string> - Text to show in the intro animation.
IntroIcon = <string> - URL to the image you want to use in the intro animation.
Icon = <string> - URL to the image you want displayed on the window.
CloseCallback = <function> - Function to execute when the window is closed.
]]

local Tab = Window:MakeTab({
	Name = "Tab 1",
	Icon = "rbxassetid://4483345998",
	PremiumOnly = false
})

--[[
Name = <string> - The name of the tab.
Icon = <string> - The icon of the tab.
PremiumOnly = <bool> - Makes the tab accessible to Sirus Premium users only.
]]


local Basket = game.Players.LocalPlayer
local fx = Basket.Character or Basket.CharacterAdded:Wait()
local fxHuman = fx:WaitForChild("Humanoid")
local fxRoot = fx:WaitForChild("HumanoidRootPart")
local BasketToolName = "Basketball"
local fxFollow = false

local function fxPressF()
    game:GetService("VirtualInputManager"):SendKeyEvent(true, Enum.KeyCode.F, false, game)
end

local function fxReleaseF()
    game:GetService("VirtualInputManager"):SendKeyEvent(false, Enum.KeyCode.F, false, game)
end

local function fxHasTool(character)
    local fxTool = character:FindFirstChildOfClass("Tool")
    return fxTool and fxTool.Name == BasketToolName
end

local function fxFindNearestWithTool()
    local fxNearest, fxDist = nil, math.huge

    for _, fxPlayer in pairs(game.Players:GetPlayers()) do
        if fxPlayer ~= Basket and fxPlayer.Character and fxPlayer.Team ~= Basket.Team then
            local fxCh = fxPlayer.Character
            local fxHum = fxCh:FindFirstChild("Humanoid")
            local fxRootPart = fxCh:FindFirstChild("HumanoidRootPart")

            if fxHum and fxRootPart and fxHasTool(fxCh) then
                local fxDistance = (fxRoot.Position - fxRootPart.Position).Magnitude
                if fxDistance < fxDist then
                    fxNearest = fxPlayer
                    fxDist = fxDistance
                end
            end
        end
    end

    return fxNearest
end

local function fxFollowTarget(fxTarget)
    if fxTarget and fxTarget.Character then
        local fxTargetRootPart = fxTarget.Character:FindFirstChild("HumanoidRootPart")
        if fxTargetRootPart then
            local fxTargetPos = fxTargetRootPart.Position + fxTargetRootPart.CFrame.LookVector * 5
            fxHuman:MoveTo(fxTargetPos)
            fxPressF()
        end
    end
end

local function fxNpcMove()
    while fxFollow do
        local fxNearestPlayer = fxFindNearestWithTool()
        if fxNearestPlayer then
            fxFollowTarget(fxNearestPlayer)
        else
            local fxRandDirection = Vector3.new(math.random(-10, 10), 0, math.random(-10, 10))
            fxHuman:MoveTo(fxRoot.Position + fxRandDirection)
        end
        wait(0.1)
    end
end

Tab:AddToggle({
    Name = "Auto Guard Mobile",
    Default = false,
    Callback = function(Value)
        fxFollow = Value
        if fxFollow then
            fxNpcMove()
        else
            fxReleaseF()
        end
    end
})

